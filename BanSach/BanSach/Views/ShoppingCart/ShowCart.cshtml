@model BanSach.Models.Cart

@{
    ViewBag.Title = "Giỏ hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/css/Shoppingcart.css" rel="stylesheet" />

<div class="container pt-3 pb-0 mb-0 rounded ">
    <h5 class="mb-2 mt-2 fw-semibold">Giỏ hàng</h5>

    @if (Model == null || Model.Total_quantity() == 0)
    {
        <div class="text-center py-5">
            <h5 class="mb-4">Chưa có sản phẩm trong giỏ hàng của bạn.</h5>
            <a href="@Url.Action("ProductList", "SanPhams")" class="btn btn-danger">Tiếp tục mua hàng</a>
        </div>
    }
    else
    {
        
        <div class="row">
            <!-- Left Column: Cart Items (col-12 col-lg-7) -->
            <div class="col-12 col-lg-8 mb-4 rounded-2 bg-white">
                <div class="card  border-0">
                    <div class="card-body p-0">
                        <table class="table  mb-0">
                            <thead class="table-striped">
                                <tr>
                                    <th scope="col"></th>
                                    <th scope="col">Thông tin</th>
                                    <th scope="col">Số lượng</th>
                                    <th scope="col">Thành tiền</th>
                                    <th scope="col">Lựa chọn</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    decimal giaBan = item._product.GiaBan;
                                    decimal mucGiamGia = item.MucGiamGia;
                                    decimal giaSauKhuyenMai = giaBan * (1 - mucGiamGia / 100);
                                    decimal total = item._quantity * giaSauKhuyenMai;
                                    <tr>
                                        <td>
                                            <img src="~/assets/images/products/@item._product.HinhAnh" width="80" height="80" alt="@item._product.TenSP" class="rounded-2" />
                                        </td>
                                        <td style="max-width:400px;">
                                            <p class="mb-1">@Html.DisplayFor(model => item._product.TenSP)</p>
                                            <p class="mb-1 text-danger fw-bold">@giaSauKhuyenMai.ToString("#,##0").Replace(',', '.') VND</p>
                                            @if (mucGiamGia > 0)
                                            {
                                                <p class="mb-0">
                                                    <small class="text-muted text-decoration-line-through">@giaBan.ToString("#,##0").Replace(',', '.') VND</small>
                                                    <small class="text-success"> -@mucGiamGia% Off</small>
                                                </p>
                                            }
                                        </td>
                                        <td>
                                            @using (Html.BeginForm("Update_Cart_Quantity", "ShoppingCart", FormMethod.Post, new { @class = "d-flex align-items-center" }))
                                            {
                                                <input type="hidden" value="@item._product.IDsp" name="idPro" />
                                                <input type="number"
                                                       class="form-control form-control-sm text-center w-75 me-2"
                                                       min="1"
                                                       max="@item._product.SoLuong"
                                                       value="@item._quantity"
                                                       name="carQuantity"
                                                       onchange="this.form.submit()" /> <!-- Đây nè -->

                                                
                                            }
                                        </td>

                                        <td class="text-danger  fw-bold fs-13">
                                            @total.ToString("#,##0").Replace(',', '.') VND
                                        </td>
                                        <td>
                                            <form action="/ShoppingCart/RemoveCart/@item._product.IDsp" method="get">
                                                <button type="submit" class="btn btn-outline-danger btn-sm">Xoá</button>
                                            </form>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="5" class="text-end fw-bold">
                                        Tổng tiền: <span class="text-danger">@Model.Total_money().ToString("#,##0").Replace(',', '.') VND</span>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Right Column: Checkout Form (col-12 col-lg-5) -->
            <div class="col-12 col-lg-4">
                <div class="card sticky-top mb-4 top-10">
                    <div class="card-body">
                        <h5 class="card-title mb-2 fw-semibold">Thông tin thanh toán</h5>

                        @if (TempData["ErrorMessage"] != null)
                        {
                            <div class="alert alert-danger" role="alert">
                                @TempData["ErrorMessage"]
                            </div>
                        }

                        <form id="checkoutForm" method="post">
                            <input type="hidden" name="CodeCustomer" value="@Session["IDkh"]" required />

                            <div class="mb-3">
                                <label for="NameCustomer" class="form-label">Họ và Tên</label>
                                <input type="text" name="NameCustomer" id="NameCustomer" class="form-control" placeholder="Điền họ và tên" value="@Session["TenKH"]" required />
                            </div>

                            <div class="mb-3">
                                <label for="PhoneCustomer" class="form-label">Số điện thoại</label>
                                <input type="text" name="PhoneCustomer" id="PhoneCustomer" class="form-control" placeholder="Điền số điện thoại" value="@Session["SoDT"]" required minlength="10" maxlength="11" pattern="\d{10,11}" title="Bắt đầu từ 0 - Min 10 max 11" />
                            </div>

                            <div class="mb-3">
                                <label for="AddressDeliverry" class="form-label">Địa chỉ giao hàng</label>
                                <input type="text" name="AddressDelivery" id="AddressDeliverry" class="form-control" placeholder="Điền địa chỉ giao hàng" required />
                                <div id="suggestions" class="suggestions" style="display:none;"></div>
                            </div>

                            <div class="d-flex justify-content-end mt-4">
                                @if (Session["IDkh"] != null || Session["IDQly"] != null)
                                {
                                    <button type="submit" formaction="@Url.Action("CheckOut", "ShoppingCart")" class="btn btn-danger me-2">
                                        Đặt hàng <i class="fas fa-mobile-alt"></i>
                                    </button>
                                    <button type="submit" formaction="@Url.Action("CreatePayPalPayment", "OnlinePayment")" class="btn btn-danger">
                                        Đặt hàng PayPal <i class="fas fa-mobile-alt"></i>
                                    </button>
                                }
                                else
                                {
                                    <span class="text-danger fw-bold fs-13 me-3 align-self-center">Hãy đăng nhập trước</span>
                                    <a href="~/dang-nhap" class="btn btn-danger">Đăng nhập</a>
                                }
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        const apiKey = 'cNNqPnwuPiecDAb0midTWtf8NJkrIXhh3qws63ns';
        const addressInput = document.getElementById('AddressDeliverry');
        const suggestionsContainer = document.getElementById('suggestions');
        let sessionToken = crypto.randomUUID() || 'default-session-token';

        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        const debouncedSearch = debounce((query) => {
            if (!query || query.length < 2) {
                suggestionsContainer.style.display = 'none';
                return;
            }
            fetch(`https://rsapi.goong.io/Place/AutoComplete?api_key=${apiKey}&input=${encodeURIComponent(query)}&sessiontoken=${sessionToken}`)
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'OK') {
                        suggestionsContainer.innerHTML = '';
                        suggestionsContainer.style.display = 'block';
                        data.predictions.forEach(prediction => {
                            const div = document.createElement('div');
                            div.className = 'suggestion-item list-group-item list-group-item-action';
                            div.textContent = prediction.description;
                            div.addEventListener('click', () => {
                                addressInput.value = prediction.description;
                                suggestionsContainer.style.display = 'none';
                            });
                            suggestionsContainer.appendChild(div);
                        });
                    } else {
                        suggestionsContainer.style.display = 'none';
                    }
                })
                .catch(error => {
                    console.error('Error calling API:', error);
                    suggestionsContainer.style.display = 'none';
                });
        }, 300);

        addressInput.addEventListener('input', (e) => debouncedSearch(e.target.value));
        document.addEventListener('click', function (e) {
            if (!suggestionsContainer.contains(e.target) && e.target !== addressInput) {
                suggestionsContainer.style.display = 'none';
            }
        });
    </script>
}

<style>
    .suggestions {
        position: absolute;
        z-index: 1000;
        width: 100%;
        max-height: 200px;
        overflow-y: auto;
        background: white;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .suggestion-item:hover {
        background-color: #f8f9fa;
        cursor: pointer;
    }
</style>