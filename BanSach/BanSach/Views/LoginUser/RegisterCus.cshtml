@{
    ViewBag.Title = "Đăng ký";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500" rel="stylesheet">
</head>

<style>
    .field-validation-error {
        color: red;
        font-size: 14px;
        margin-bottom: 10px;
        text-align: left;
    }

    .login-page {
        max-width: 350px;
        margin: 50px auto;
        min-width: 200px;
        position: relative;
        max-height: auto;
        min-height: 200px;
    }

    .form {
        position: relative;
        z-index: 1;
        background: #ffffff;
        max-width: 340px;
        margin: 0 auto 50px;
        padding: 40px;
        text-align: center;
        border: 1px solid #e5e5e5;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
    }

        .form input {
            font-family: "Roboto", sans-serif;
            outline: 0;
            background: #f7f7f7;
            width: 100%;
            border: 1px solid #ddd;
            margin: 0 0 5px;
            padding: 12px;
            box-sizing: border-box;
            font-size: 14px;
            border-radius: 5px;
        }

        .form button {
            font-family: "Roboto", sans-serif;
            text-transform: uppercase;
            outline: 0;
            background: #ff424e;
            width: 100%;
            border: 0;
            padding: 14px;
            color: white;
            font-size: 16px;
            cursor: pointer;
            border-radius: 5px;
            font-weight: 500;
        }

        .form .message {
            margin: 15px 0 0;
            color: #666;
            font-size: 14px;
        }

            .form .message a {
                color: #ff424e;
                font-weight: bold;
                text-decoration: none;
            }

        .form .password-field {
            position: relative;
            margin-bottom: 15px;
        }

        .form .toggle-password {
            position: absolute;
            right: 10px;
            top: 24px;
            transform: translateY(-50%);
            cursor: pointer;
            color: #888;
            font-size: 13px;
        }

    .text-danger {
        color: #dc3545;
        font-size: 13px;
        text-align: left;
        margin-top: 5px;
        margin-bottom: 0;
    }
</style>

<div class="login-page">
    <div class="form">
        <h3 style="color: #333; font-weight: bold;">Đăng ký</h3>

        <form action="/LoginUser/RegisterCus" class="login-form" method="post" onsubmit="return validateForm(event)">
            <p id="error" class="field-validation-error">@ViewBag.ErrorRegister</p>

            <p>
                <input type="text" placeholder="Tên" tabindex="1" name="TenKH" maxlength="50" required />
            </p>
            <p>
                <input type="tel" placeholder="Số điện thoại" tabindex="2" maxlength="10" name="SoDT" required />
            </p>

            <p>
                <input type="email" placeholder="Email" tabindex="3" name="Email" minlength="11" maxlength="255" oninput="validateEmail(this)" required />
            </p>

            <p>
                <input type="text" placeholder="Tài khoản" tabindex="4" name="TKhoan" minlength="6" maxlength="30" oninput="validateAccount(this)" required />
            </p>

            <div class="password-field">
                <p>
                    <input type="password" placeholder="Mật Khẩu" tabindex="5" name="MKhau" minlength="6" maxlength="30" id="password1" oninput="validatePassword(this)" required />
                    <span id="togglepassword1" class="toggle-password" onclick="togglePasswordVisibility('password1')">Hiện</span>
                </p>
            </div>

            <div class="password-field">
                <p>
                    <input type="password" placeholder="Nhập lại mật khẩu" name="ConfirmPass" minlength="6" maxlength="30" id="password2" oninput="validatePassword(this)" required />
                    <span id="togglepassword2" class="toggle-password" onclick="togglePasswordVisibility('password2')">Hiện</span>
                </p>
            </div>

            <button type="submit" class="btn btn-dark w-100">Đăng ký</button>

            <p class="message">Đã có tài khoản? <a href="~/LoginUser/login">Đăng nhập ngay</a></p>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Hàm lọc và loại bỏ các ký tự không mong muốn
        function sanitizeInput(input, allowedPattern) {
            input.value = input.value.replace(allowedPattern, '');
        }

        // Hàm kiểm tra tài khoản
        function validateAccount(input) {
            const value = input.value.trim();
            const allowedPattern = /[^a-zA-Z0-9]/g; // Chỉ cho phép chữ và số
            sanitizeInput(input, allowedPattern);

            const minLength = parseInt(input.getAttribute("minlength")) || 6;
            const maxLength = parseInt(input.getAttribute("maxlength")) || 30;
            const errorElement = input.parentNode.querySelector(".text-danger") || document.createElement("p");

            const hasLetter = /[a-zA-Z]/.test(value);
            const hasNumber = /[0-9]/.test(value);
            const hasUppercase = /[A-Z]/.test(value);

            if (value.length < minLength || value.length > maxLength || !hasLetter || !hasNumber || !hasUppercase) {
                errorElement.textContent = `Tài khoản phải có từ ${minLength} đến ${maxLength} ký tự, chỉ chứa chữ và số, và phải có ít nhất một chữ in hoa.`;
                errorElement.className = "text-danger";
                errorElement.style.fontSize = "13px";
                errorElement.style.display = "block";
                errorElement.id = "ErrorAccount";
                input.parentNode.appendChild(errorElement);
                return false;
            } else {
                if (input.parentNode.querySelector(".text-danger")) {
                    input.parentNode.removeChild(input.parentNode.querySelector(".text-danger"));
                }
                return true;
            }
        }

        // Hàm kiểm tra mật khẩu
        function validatePassword(input) {
            const value = input.value.trim();
            const allowedPattern = /[^a-zA-Z0-9]/g; // Chỉ cho phép chữ và số
            sanitizeInput(input, allowedPattern);

            const minLength = parseInt(input.getAttribute("minlength")) || 6;
            const maxLength = parseInt(input.getAttribute("maxlength")) || 30;
            const errorElement = input.parentNode.querySelector(".text-danger") || document.createElement("p");

            const hasLetter = /[a-zA-Z]/.test(value);
            const hasNumber = /[0-9]/.test(value);
            const hasUppercase = /[A-Z]/.test(value);

            const password1 = document.getElementById("password1");
            const password2 = document.getElementById("password2");

            // Kiểm tra định dạng cơ bản
            if (value.length < minLength || value.length > maxLength || !hasLetter || !hasNumber || !hasUppercase) {
                errorElement.textContent = `Mật khẩu phải có từ ${minLength} đến ${maxLength} ký tự, chỉ chứa chữ và số, và phải có ít nhất một chữ in hoa.`;
                errorElement.className = "text-danger";
                errorElement.style.fontSize = "13px";
                errorElement.style.display = "block";
                errorElement.id = "erorrPassword";
                input.parentNode.appendChild(errorElement);
                return false;
            } else {
                if (input.parentNode.querySelector(".text-danger") && !errorElement.textContent.includes("khớp")) {
                    input.parentNode.removeChild(input.parentNode.querySelector(".text-danger"));
                }
            }

            // So sánh hai mật khẩu nếu cả hai đã được nhập
            if (input.id === "password2" && password1.value && password2.value) {
                if (password1.value !== password2.value) {
                    errorElement.textContent = "Mật khẩu nhập lại không khớp với mật khẩu.";
                    errorElement.className = "text-danger";
                    errorElement.style.fontSize = "13px";
                    errorElement.style.display = "block";
                    errorElement.id = "erorrConfirmPassword";
                    input.parentNode.appendChild(errorElement);
                    return false;
                } else {
                    if (input.parentNode.querySelector(".text-danger")) {
                        input.parentNode.removeChild(input.parentNode.querySelector(".text-danger"));
                    }
                    return true;
                }
            }
            return true;
        }

        // Hàm kiểm tra form trước khi submit
        function validateForm(event) {
            const password1 = document.getElementById("password1");
            const password2 = document.getElementById("password2");
            const account = document.querySelector("input[name='TKhoan']");

            let isValid = true;

            // Kiểm tra tài khoản
            if (!validateAccount(account)) {
                isValid = false;
            }

            // Kiểm tra mật khẩu
            if (!validatePassword(password1)) {
                isValid = false;
            }

            // Kiểm tra mật khẩu nhập lại và so sánh
            if (!validatePassword(password2) || password1.value !== password2.value) {
                const errorElement = password2.parentNode.querySelector(".text-danger") || document.createElement("p");
                if (password1.value !== password2.value) {
                    errorElement.textContent = "Mật khẩu nhập lại không khớp với mật khẩu.";
                    errorElement.className = "text-danger";
                    errorElement.style.fontSize = "13px";
                    errorElement.style.display = "block";
                    password2.parentNode.appendChild(errorElement);
                }
                isValid = false;
            }

            if (!isValid) {
                event.preventDefault(); // Ngăn submit nếu có lỗi
            }
            return isValid;
        }

        // Hàm hiện/ẩn mật khẩu
        function togglePasswordVisibility(passwordId) {
            const password = document.getElementById(passwordId);
            const toggle = document.getElementById(`toggle${passwordId === "password1" ? "password1" : "password2"}`);
            if (password && toggle) {
                if (password.type === "password") {
                    password.type = "text";
                    toggle.textContent = "Ẩn";
                } else {
                    password.type = "password";
                    toggle.textContent = "Hiện";
                }
            } else {
                console.error("Không tìm thấy phần tử mật khẩu hoặc toggle với ID:", passwordId);
            }
        }
    </script>
}