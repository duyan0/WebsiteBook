@model PagedList.IPagedList<BanSach.Models.DonHang>
@using PagedList.Mvc;
@using PagedList;
@{
    ViewBag.Title = "Lịch sử Đơn Hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="@Url.Content("~/Content/PagedList.css")" rel="stylesheet" />
<div class="container bg-white rounded-2 p-2 mt-2 col-xl-12">
    <h4 class="text-dark text-center fw-semibold">Lịch sử Đơn Hàng</h4>

    <!-- Hiển thị thông báo lỗi từ TempData -->
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger text-center mt-3 rounded-sm alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <!-- Hiển thị thông báo thành công từ TempData -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success text-center mt-3 rounded-sm alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center mt-5 rounded-sm" role="alert">
            <i class="fa fa-info-circle" style="font-size: 24px;"></i>
            <p class="mt-3 mb-0">Chưa có đơn hàng nào. Bạn có thể khám phá và đặt mua sản phẩm ngay hôm nay!</p>
        </div>
    }
    else
    {
        <div class="mb-3 d-flex justify-content-end">
            <a href="@Url.Action("ExportToExcel", "KhachHangs")" class="btn btn-success rounded-sm">Xuất Excel</a>
        </div>

        <div class="table-responsive mt-4">
            <table class="table table-responsive-sm">
                <thead>
                    <tr class="text-dark text-start ">
                        <th style="width:134px;">Mã DH</th>
                        <th>Ngày đặt hàng</th>
                        <th>Ngày nhận hàng</th>
                        <th>Tổng số tiền</th>
                        <th>Trạng thái</th>
                        <th style="width: 158px;">Chi tiết</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr class="text-dark text-start ">
                            <td class="font-weight-bold text-dark">@order.IDdh</td>

                            <td class="text-dark">
                                @(order.NgayDatHang.HasValue
                                    ? order.NgayDatHang.Value.ToString("dd/MM/yyyy HH:mm:ss")
                                    : "Chưa đặt hàng")
                            </td>

                            <td class="text-dark ">
                                @if (order.TrangThai == "Đã nhận hàng" && order.NgayNhanHang.HasValue)
                                {
                                    @order.NgayNhanHang.Value.ToString("dd/MM/yyyy HH:mm:ss")
                                }
                                else if (order.TrangThai == "Đã xác nhận" && order.NgayDatHang.HasValue)
                                {
                                    <span style="color: orange;" class="fw-semibold">Dự kiến: @order.NgayDatHang.Value.AddDays(2).ToString("dd/MM/yyyy")</span>
                                }
                                else
                                {
                                    <span class="d-inline-flex fw-semibold text-info">Dự kiến 2 ngày</span>
                                }
                            </td>

                            <td class="text-danger fw-semibold">
                                @order.GetTongSoTien().ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                            </td>
                            <td class="text-left">
                                <button class="btn btn-sm @(order.TrangThai == "Chờ xử lý" ? "btn-info rounded-sm"
                                    : order.TrangThai == "Đã xác nhận" ? "btn-success rounded-sm"
                                    : order.TrangThai == "Đã hủy" ? "btn-danger rounded-sm"
                                    : order.TrangThai == "Đã nhận hàng" ? "btn-warning rounded-sm"
                                    : "btn-secondary") btn-fixed-size rounded-sm text-dark" disabled>
                                    @order.TrangThai
                                </button>
                            </td>
                            <td>
                                <div class="d-flex justify-content-start">
                                    <!-- Sử dụng Flexbox để đặt các nút trên cùng một hàng -->
                                    @* Kiểm tra xem tổng số tiền của đơn hàng có lớn hơn 0 *@
                                    @if (order.GetTongSoTien() > 0)
                                    {
                                        <a href="@Url.Action("DetailsKH", "DonHangCTs", new { id = order.IDdh })" class="btn btn-success mx-1 btn-sm rounded-sm btn-fixed-sizee">Xem</a>
                                    }

                                    @* Kiểm tra trạng thái đơn hàng "Đã xác nhận" *@
                                    @if (order.TrangThai == "Đã xác nhận")
                                    {
                                        <a href="@Url.Action("DaNhanHang", "DonHangs", new { id = order.IDdh })" class="btn btn-warning mx-1 btn-sm rounded-sm ml-2 btn-fixed-sizee">Đã nhận</a>
                                    }

                                    @* Kiểm tra trạng thái đơn hàng "Chờ xử lý" để hiển thị nút hủy *@
                                    @if (order.TrangThai == "Chờ xử lý")
                                    {
                                        @* Sử dụng Html.BeginForm để tạo form hủy đơn hàng *@
                                        using (Html.BeginForm("Cancel", "KhachHangs", new { id = order.IDdh }, FormMethod.Post))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input type="submit" value="Hủy" class="btn btn-danger btn-sm rounded-sm mx-1 ml-2" />
                                        }
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="pagination-container text-center mx-2">
            @Html.PagedListPager(Model, page => Url.Action("LichSuDonHang", new { page }), new PagedListRenderOptions
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                DisplayLinkToLastPage = PagedListDisplayMode.Always,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                DisplayLinkToIndividualPages = true,
                LinkToFirstPageFormat = "Đầu tiên",
                LinkToLastPageFormat = "Cuối cùng",
                LinkToPreviousPageFormat = "Trước",
                LinkToNextPageFormat = "Tiếp",
                UlElementClasses = new[] { "pagination" }
            })
        </div>
    }
</div>