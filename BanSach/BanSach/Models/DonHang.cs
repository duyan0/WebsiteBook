//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BanSach.Models
{
    using BanSach.DesignPatterns.StatePattern;
    using Microsoft.Extensions.DependencyModel;
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class DonHang
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public DonHang()
        {
            this.DanhGiaSanPham = new HashSet<DanhGiaSanPham>();
            this.DonHangCT = new HashSet<DonHangCT>();
            State = new PendingState();
        }

        public int IDdh { get; set; }
        public Nullable<System.DateTime> NgayDatHang { get; set; }
        public Nullable<int> IDkh { get; set; }
        public string DiaChi { get; set; }
        public Nullable<System.DateTime> NgayNhanHang { get; set; }
        public string TrangThai { get; set; }
        public decimal TongTien { get; set; }
        public IOrderState State { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DanhGiaSanPham> DanhGiaSanPham { get; set; }
        public virtual KhachHang KhachHang { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DonHangCT> DonHangCT { get; set; }

        public void InitializeState()
        {
            switch (TrangThai)
            {
                case "Chờ xử lý":
                    State = new PendingState();
                    break;
                case "Đã xác nhận":
                    State = new ConfirmedState();
                    break;
                case "Đã nhận hàng":
                    State = new DeliveredState();
                    break;
                case "Đã huỷ":
                    State = new CancelledState();
                    break;
                case "Yêu cầu trả hàng":
                    State = new ReturnRequestedState();
                    break;
                default:
                    State = new PendingState(); // Mặc định nếu TrangThai không hợp lệ
                    break;
            }
        }
        public decimal GetTongSoTien()
        {
            return DonHangCT != null
                   ? DonHangCT.Sum(ct => (ct.SoLuong * ct.Gia)) : 0;
        }

        // Phương thức này tính tổng tiền cho đơn hàng
        public decimal Total_DH
        {
            get
            {
                return DonHangCT != null
                    ? DonHangCT.Sum(ct => (ct.SoLuong * ct.Gia)) : 0;
            }
        }
    }
}
